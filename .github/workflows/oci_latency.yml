name: OCI Latency (Hangzhou NAS)

on:
  workflow_dispatch:
    inputs:
      instance_ocid:
        description: "Target OCI instance OCID (可留空则用默认 Secret)"
        required: false
        default: ""

jobs:
  check:
    runs-on: [self-hosted, Linux, X64]   # 或 [self-hosted, hangzhou-nas]
    timeout-minutes: 30

    env:
      # 允许输入覆盖默认；留空就用 Secrets 里的 OCI_INSTANCE_ID
      OCI_INSTANCE_ID: ${{ github.event.inputs.instance_ocid != '' && github.event.inputs.instance_ocid || secrets.OCI_INSTANCE_ID }}

    steps:
      - name: Network warm-up
        run: |
          apt-get update
          apt-get install -y ca-certificates curl dnsutils git
          update-ca-certificates || true
          # 有些环境 HTTP/2 + GnuTLS 不稳，强制用 HTTP/1.1
          git config --global http.version HTTP/1.1
          # 先探测一遍，便于快速失败时定位
          echo "== curl github.com =="
          curl -I --max-time 10 https://github.com || true
          echo "== curl api.github.com =="
          curl -I --max-time 10 https://api.github.com || true
          echo "== DNS =="
          nslookup github.com || getent hosts github.com || true

      - name: Force SSH over 443
        run: |
          mkdir -p ~/.ssh
          printf "%s\n" \
            "Host github.com" \
            "  HostName ssh.github.com" \
            "  Port 443" \
            "  User git" >> ~/.ssh/config
          chmod 600 ~/.ssh/config
          # 预置 known_hosts，避免握手卡住
          ssh-keyscan -p 443 ssh.github.com >> ~/.ssh/known_hosts

      - name: Checkout via SSH
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.PKEY }}
          persist-credentials: false
          fetch-depth: 1

      - name: Install deps (ping + python + SDK)
        run: |
          apt-get update
          apt-get install -y iputils-ping iproute2 python3 python3-pip
          pip3 install --no-cache-dir oci

      - name: Run latency optimizer
        env:
          OCI_CLI_USER:        ${{ secrets.OCI_CLI_USER }}
          OCI_CLI_TENANCY:     ${{ secrets.OCI_CLI_TENANCY }}
          OCI_CLI_REGION:      ${{ secrets.OCI_CLI_REGION }}
          OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
          OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
          OCI_CLI_PASSPHRASE:  ${{ secrets.OCI_CLI_PASSPHRASE }}
          LATENCY_THRESHOLD_MS: ${{ secrets.LATENCY_THRESHOLD_MS }}
          PING_COUNT:           ${{ secrets.PING_COUNT }}
          MAX_SWITCHES:         ${{ secrets.MAX_SWITCHES }}
          OCI_INSTANCE_ID:      ${{ env.OCI_INSTANCE_ID }}
        run: python3 monitor_latency.py
